alias: Refresh Panels on Select
description: Run query_panels
triggers:
  - entity_id:
      - input_datetime.timelapse_day_picker
      - input_number.timelapse_hour_slider
      - input_boolean.power_panels
      - input_boolean.latest_panels
    trigger: state
conditions: []
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: |
              {{ trigger.entity_id in [
                'input_datetime.timelapse_day_picker',
                'input_number.timelapse_hour_slider'
              ] }}
        sequence:
          - data:
              entity_id: input_boolean.latest_panels
            action: input_boolean.turn_off
  - variables:
      mode: |-
        {% if is_state('input_boolean.latest_panels', 'on') and
              is_state('input_boolean.power_panels', 'off') %}
          live
        {% elif is_state('input_boolean.power_panels', 'on') %}
          power
        {% else %}
          energy
        {% endif %}
  - choose:
      - conditions:
          - condition: state
            entity_id: input_boolean.latest_panels
            state: "on"
        sequence:
          - data:
              entity_id: input_datetime.timelapse_day_picker
              date: "{{ now().date() }}"
            action: input_datetime.set_datetime
          - wait_template: >-
              {{ states('input_datetime.timelapse_day_picker')[:10] ==
              now().date().isoformat() }}
            timeout: "00:00:10"
  - variables:
      day: "{{ states('input_datetime.timelapse_day_picker')[:10] }}"
      hour: "{{ states('input_number.timelapse_hour_slider') | int }}"
  - data:
      day: "{{ day }}"
      hour: "{{ hour }}"
      mode: "{{ mode }}"
    action: shell_command.query_panels
  - data:
      entity_id: sensor.timelapse_power_graph
    action: homeassistant.update_entity
  - data:
      entity_id: sensor.timelapse_power_panels
    action: homeassistant.update_entity
